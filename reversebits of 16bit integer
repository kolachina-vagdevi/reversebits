import java.util.*;
import java.util.Scanner;
public class Solution {
    // you need treat n as an unsigned value
    static int[] preComputedReverse = new int[1 << 16];
    static {
        for (int i = 0; i < (1 << 16); i++)
        {
            preComputedReverse[i] = reverse(i, 15);
            }
            }
            private static int reverse(int x, int lastIndex)
            {
                int i = 0;
                int j = lastIndex;
                while (i < j)
                {
                    x = swapBits(x, i, j);
                    i++;
                    j--;
                    }
                    return x;
                    }
                    private static int swapBits(int x, int i, int j)
                    { if (((x >>> i) & 1) != ((x >>> j) & 1))
                    { int bitMask = (1 << i) | (1 << j);
                    x ^= bitMask;
                    } return x;
                    }
                    public static int reverseBits(int n)
                    { int wordSize = 16;
                    int bitMask = 0xFFFF;
                    return (preComputedReverse[n & bitMask] << (3*wordSize) | preComputedReverse[(n >>> wordSize) & bitMask] << (2*wordSize) | preComputedReverse[(n >>> (2*wordSize)) & bitMask] << wordSize | preComputedReverse[(n >>> (3*wordSize)) & bitMask]);
                    }
                    public static void main (String args[])
                    {
                        int x,n;
                        Scanner obj=new Scanner(System.in);
                         x=obj.nextInt();
                         n=obj.nextInt();// max value of N=3 as it is 16 bit integer
                        System.out.println(reverse(x,n));
                    }
}
